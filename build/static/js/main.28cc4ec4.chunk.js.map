{"version":3,"sources":["components/viewer.js","selectors/parse_expressions.js","actions/index.js","actions/types.js","components/editor.js","components/app.js","reducers/index.js","reducers/code_reducer.js","globals.js","index.js"],"names":["Viewer","expressions","formattedExpressions","_","mapValues","expression","result","eval","type","isFunction","name","isBoolean","isObject","isArray","JSON","stringify","map","line","code","this","evaluateExpressions","props","defaultHeight","window","innerHeight","split","defaultSize","className","renderExpressions","errors","Component","mapStateToProps","state","parseExpressions","e","toString","connect","codeSelector","OPEN_DELIMITERS","CLOSE_DELIMITERS","DELIMITER_MAP","findDelimiters","lineContents","column","intersection","takeRight","length","transformedCode","transform","presets","console","log","codeByLine","tokenized","esprima","tokenize","loc","parens","wasOpen","exp","reduce","index","value","end","lineNumber","lineHasMoreDelimiters","includes","every","count","take","join","createSelector","updateCode","clear","payload","Editor","onChange","onCodeChange","bind","options","mode","lineNumbers","tabSize","actions","App","width","rootReducer","combineReducers","action","extend","React","createStoreWithMiddleware","applyMiddleware","createStore","ReactDOM","render","store","reducers","document","querySelector"],"mappings":"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","file":"static/js/main.28cc4ec4.chunk.js","sourcesContent":["import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport parseExpressions from '../selectors/parse_expressions';\nimport SplitPane from 'react-split-pane';\n\nclass Viewer extends Component {\n  evaluateExpressions(expressions) {\n    const formattedExpressions = _.mapValues(expressions, expression => {\n      const result = eval(expression);\n\n      if (result && result.type) {\n        return result;\n      } else if (_.isFunction(result) && result.name) {\n        return <i>Function {result.name}</i>;\n      } else if (_.isBoolean(result)) {\n        return result ? 'True' : 'False';\n      } else if (_.isObject(result) || _.isArray(result)) {\n        return JSON.stringify(result);\n      }\n\n      return result;\n    });\n\n    return _.map(formattedExpressions, (expression, line) =>\n      <div>{expression}</div>\n    );\n  }\n\n  renderExpressions(code) {\n    return this.evaluateExpressions(this.props.expressions);\n  }\n\n  render() {\n    const defaultHeight = window.innerHeight / 1.3;\n\n    return (\n      <SplitPane split=\"horizontal\" defaultSize={defaultHeight} className=\"viewer\">\n        <div className=\"result\">\n          {this.renderExpressions(this.props.code)}\n        </div>\n        <div className=\"errors\">\n          {this.props.errors}\n        </div>\n      </SplitPane>\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  let expressions, errors;\n\n  try {\n    expressions = parseExpressions(state);\n  } catch (e) {\n    errors = e.toString();\n  }\n\n  return { expressions, errors };\n}\n\nexport default connect(mapStateToProps)(Viewer);\n","import _ from 'lodash';\nimport { createSelector } from 'reselect';\nimport { transform } from 'babel-standalone';\nimport esprima from 'esprima';\n\n\nconst codeSelector = state => state.code;\nconst OPEN_DELIMITERS = [ '(', '{', '[', '`' ];\nconst CLOSE_DELIMITERS = [ ')', '}', ']', '`' ];\nconst DELIMITER_MAP = {\n  ')': '(',\n  '}': '{',\n  ']': '[',\n  '`': '`'\n};\n\nconst findDelimiters = ({ column }, lineContents) =>\n  _.intersection(_.takeRight(lineContents, lineContents.length - column), OPEN_DELIMITERS).length\n\nconst parseExpressions = (code) => {\n  const transformedCode = transform(code, { presets: ['react']}).code;\n  console.log(\"transformedCode\", transformedCode);\n  const codeByLine = transformedCode.split('\\n');\n  console.log(\"codeByLine\", codeByLine);\n  const tokenized = esprima.tokenize(transformedCode, { loc: true });\n\n  const parens = { '(': 0, '{': 0, '[': 0 };\n  let wasOpen = false;\n  const exp = _.reduce(tokenized, (expressions, { value, loc: { end } }, index) => {\n    const lineNumber = end.line;\n    const lineContents = codeByLine[lineNumber - 1];\n    const lineHasMoreDelimiters = findDelimiters(end, lineContents);\n    const endOfLine = end.column === lineContents.length;\n\n    if (expressions[lineNumber]) { return expressions; }\n\n    if (OPEN_DELIMITERS.includes(value)) {\n      parens[value] += 1;\n      wasOpen = true;\n    }\n\n    if (CLOSE_DELIMITERS.includes(value)) {\n      parens[DELIMITER_MAP[value]] -= 1;\n    }\n\n    if (!lineHasMoreDelimiters && wasOpen && _.every(parens, count => count === 0)) {\n      wasOpen = false;\n      expressions[lineNumber] = _.take(codeByLine, lineNumber).join('\\n');\n\n      return expressions;\n    }\n\n    if (!lineHasMoreDelimiters && _.every(parens, count => count === 0)) {\n      expressions[lineNumber] = _.take(codeByLine, lineNumber).join('\\n');\n\n      return expressions;\n    }\n\n    return expressions;\n  }, {});\n\n  eval(transformedCode);\n  return exp;\n}\n\nexport default createSelector(\n  codeSelector,\n  parseExpressions\n);\n","import {\n  DID_UPDATE_CODE\n} from './types';\n\nexport function updateCode(code) {\n  console.clear();\n\n  return {\n    type: DID_UPDATE_CODE,\n    payload: code\n  };\n}\n","export const DID_UPDATE_CODE = 'did_update_code';\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport CodeMirror from 'react-codemirror';\nimport 'codemirror/mode/jsx/jsx';\nimport * as actions from '../actions';\nimport { connect } from 'react-redux';\n\nclass Editor extends Component {\n  onCodeChange(code) {\n    this.props.updateCode(code);\n  }\n\n  render() {\n    return (\n      <div>\n        <CodeMirror\n          value={this.props.code}\n          onChange={this.onCodeChange.bind(this)}\n          options={{ mode: 'jsx', lineNumbers: true, tabSize: 2 }} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({code}) {\n  return { code };\n}\n\nexport default connect(mapStateToProps, actions)(Editor);\n","import React, { Component } from 'react';\nimport SplitPane from 'react-split-pane';\nimport Editor from './editor';\nimport Viewer from './viewer';\n\nexport default class App extends Component {\n  render() {\n    const width = window.innerHeight;\n\n    return (\n      <SplitPane split=\"vertical\" defaultSize={width}>\n        <Editor />\n        <Viewer />\n      </SplitPane>\n    );\n  }\n}\n","import { combineReducers } from 'redux';\nimport code from './code_reducer';\n\nconst rootReducer = combineReducers({\n  code\n});\n\nexport default rootReducer;\n","import { DID_UPDATE_CODE } from '../actions/types';\n\nconst INITIAL_STATE = '';\n\nexport default function(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case DID_UPDATE_CODE:\n    return action.payload\n  default:\n    return state;\n  }\n}\n","import _ from 'lodash';\nimport React, { Component } from 'react';\n\n_.extend(window, { _, React, Component });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport App from './components/app';\nimport reducers from './reducers';\nimport Globals from './globals';\n\nconst createStoreWithMiddleware = applyMiddleware()(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(reducers)}>\n    <App />\n  </Provider>\n  , document.querySelector('.render'));\n"],"sourceRoot":""}